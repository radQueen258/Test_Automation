package old_attempts;// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class DeleteNoteTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void deleteNote() {
    // Test name: deleteNote
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://alison.com/");
    // 2 | setWindowSize | 1854x1048 | 
    driver.manage().window().setSize(new Dimension(1854, 1048));
    // 3 | click | linkText=Log In | 
    driver.findElement(By.linkText("Log In")).click();
    // 4 | click | name=email | 
    driver.findElement(By.name("email")).click();
    // 5 | type | name=email | radqueen.nhapulo@gmail.com
    driver.findElement(By.name("email")).sendKeys("radqueen.nhapulo@gmail.com");
    // 6 | click | name=password | 
    driver.findElement(By.name("password")).click();
    // 7 | type | name=password | AkdarNhapulo
    driver.findElement(By.name("password")).sendKeys("AkdarNhapulo");
    // 8 | click | css=.input-field:nth-child(3) > .icon-hide-password | 
    driver.findElement(By.cssSelector(".input-field:nth-child(3) > .icon-hide-password")).click();
    // 9 | click | css=.form-checkbox | 
    driver.findElement(By.cssSelector(".form-checkbox")).click();
    // 10 | click | css=.login__bottom:nth-child(7) .submit-login | 
    driver.findElement(By.cssSelector(".login__bottom:nth-child(7) .submit-login")).click();
    // 11 | click | id=ab-continue | 
    driver.findElement(By.id("ab-continue")).click();
    // 12 | mouseOver | css=.tw-w-12 | 
    {
      WebElement element = driver.findElement(By.cssSelector(".tw-w-12"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 13 | mouseOut | css=.tw-w-12 | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 14 | click | css=.mat-tooltip-trigger > .ng-tns-c1065955076-1 | 
    driver.findElement(By.cssSelector(".mat-tooltip-trigger > .ng-tns-c1065955076-1")).click();
    // 15 | click | css=.see-all-notes | 
    driver.findElement(By.cssSelector(".see-all-notes")).click();
    // 16 | mouseOver | css=.download-notes-action .btn-content | 
    {
      WebElement element = driver.findElement(By.cssSelector(".download-notes-action .btn-content"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 17 | mouseOut | css=.download-notes-action .btn-content | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 18 | mouseOver | css=.btn:nth-child(1) > .mat-mdc-button-touch-target | 
    {
      WebElement element = driver.findElement(By.cssSelector(".btn:nth-child(1) > .mat-mdc-button-touch-target"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 19 | mouseOut | css=.btn:nth-child(1) > .mat-mdc-button-touch-target | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 20 | click | css=.ng-tns-c125666391-24:nth-child(4) | 
    driver.findElement(By.cssSelector(".ng-tns-c125666391-24:nth-child(4)")).click();
  }
}
